@startuml
    participant ConsumerWorker.Worker
    participant KafkaMessageConsumerManager
    participant "ServiceProvider`Manager"
    participant KafkaTopicMessageConsumer
    participant KafkaConsumerBuilder
    participant IConsumer
    participant "ServiceProvider`Consumer"
    participant "ServiceProvider`Scope"
    participant Mediator
    collections MessageNotificationHandlers

    activate ConsumerWorker.Worker
    ConsumerWorker.Worker -> KafkaMessageConsumerManager : StartConsumers(ct)
    deactivate ConsumerWorker.Worker

    activate KafkaMessageConsumerManager
    KafkaMessageConsumerManager -> KafkaMessageConsumerManager : find all messages with notification handlers
    KafkaMessageConsumerManager -> KafkaMessageConsumerManager : find the topics for those messages
    loop each topic with notification handlers
        KafkaMessageConsumerManager -> "ServiceProvider`Manager" : GetRequiredService<IKafkaTopicMessageConsumer>()
        KafkaMessageConsumerManager <-- "ServiceProvider`Manager" : kafkaTopicMessageConsumer
        group new thread
            KafkaMessageConsumerManager -> KafkaTopicMessageConsumer : StartConsuming(topic, ct)
            deactivate KafkaMessageConsumerManager

            activate KafkaTopicMessageConsumer
            KafkaTopicMessageConsumer -> KafkaConsumerBuilder : Build()

            activate KafkaConsumerBuilder
            KafkaTopicMessageConsumer <-- KafkaConsumerBuilder : consumer
            deactivate KafkaConsumerBuilder

            KafkaTopicMessageConsumer -> IConsumer : Subscribe(topic)
            activate IConsumer
            loop while no cancellation requested on cancellationToken
                KafkaTopicMessageConsumer -> IConsumer : Consume(ct)
                KafkaTopicMessageConsumer <-- IConsumer : consumeResult
                deactivate IConsumer

                KafkaTopicMessageConsumer -> KafkaTopicMessageConsumer : determine message type
                KafkaTopicMessageConsumer -> KafkaTopicMessageConsumer : build MessageNotification

                KafkaTopicMessageConsumer -> "ServiceProvider`Consumer" : CreateScope()
                activate "ServiceProvider`Consumer"
                KafkaTopicMessageConsumer <-- "ServiceProvider`Consumer" : scope
                KafkaTopicMessageConsumer -> "ServiceProvider`Scope" : GetRequiredService<IMediator>
                KafkaTopicMessageConsumer <-- "ServiceProvider`Scope" : mediator
                deactivate "ServiceProvider`Consumer"

                KafkaTopicMessageConsumer -> Mediator : Publish(messageNotification, ct)
                activate Mediator
                Mediator -> MessageNotificationHandlers : Handle(messageNotification, ct)
                activate MessageNotificationHandlers
                deactivate MessageNotificationHandlers
                deactivate Mediator
            end
        end
        deactivate KafkaTopicMessageConsumer
    end
@enduml